1、单一职责
    不要存在多于一个导致变更的原因 ，一个方法、类、接口只负责单一职责
2、开闭原则
    对扩展开放，对修改关闭   尽可能新增类去做功能扩展，而不是在原有基础上去变更
3、依赖倒置原则
    针对抽象编程， 抽象不依赖细节，细节依赖抽象。针对接口编程，不针对细节编程。
4、接口隔离原则
    尽可能细化接口，尽可能不依赖不需要的接口
5、迪米特法则
    最少知道原则，尽量降低类之间耦合度，对象之间保持最少的了解
6、里氏替换原则
    在一个可以使用其父类的地方，用他的子类去替换，程序不会发生变化。如果一个地方适用于父类，那么它一定适用于其子类。
    子类继承父类，不应该去修改父类的功能，
7、合成复用原则（聚合组合）
    使用组合聚合的方式，而不是继承来达到代码复用的目的
    聚合: 合在一起能工作，分开也能工作 has-a
    组合: 比如说：头是由鼻眼睛等组合的 contains-a
    继承: 狗继承动物 is-a